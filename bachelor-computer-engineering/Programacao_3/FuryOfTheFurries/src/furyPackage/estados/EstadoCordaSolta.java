/* Generated by Together */

package furyPackage.estados;

import furyPackage.Activavel;
import furyPackage.Corda;
import furyPackage.Enganchavel;
import furyPackage.Suportavel;
import jge2d.Ponto;
import jge2d.ResultadoColisao;
import jge2d.SpriteCorda;
import jge2d.jogo.movimentos.MovimentoEvent;
import jge2d.jogo.movimentos.MovimentoListener;

/**
 * Define o comportamento da corda no estado solta (estado por enganchar quando é lançada)
 */
public class EstadoCordaSolta extends EstadoCorda implements MovimentoListener {

    public EstadoCordaSolta(Corda corda) {
        super(corda);
    }

    public void trataColisao(Enganchavel enganchado, ResultadoColisao resultado) {
        enganchado.enganchar(getCorda(), resultado);
        getCorda().actualizarMovimentoDoDono(resultado.tempoColisao);
    }

    public void trataColisao(Suportavel plataforma, ResultadoColisao resultado  ){
        getCorda().remover();
    }

    public void trataColisao(Activavel activavel, ResultadoColisao resultado ){
        getCorda().remover();
    }

    public void lancar(Ponto destino, long tempo){
    }

    /**
     * movimentoAcabou
     *
     * @param movimentoEvent MovimentoEvent
     */
    public void movimentoAcabou(MovimentoEvent e) {
        getCorda().getNivel().adicionarRemovivel(getCorda());
        getCorda().mudarEstado(EstadoCorda.ARRECADADA);
    }

    public void actualizarMovimentoDoDono(long tempo) {
        ((SpriteCorda)getCorda().getSprite()).setMovimentoDono(getCorda().getHeroi().getMovimentoActual());
        getCorda().getSprite().getMovimento().setPosicaoRelativa(getCorda().getHeroi().getMovimentoActual(), tempo);
    }

    public void remover(long tempo) {
        getCorda().getSprite().removeSpriteColisionListener(getCorda(), "trataColisao");
        getCorda().remover();
    }

}
